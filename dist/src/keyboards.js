import { InlineKeyboard, Keyboard } from 'grammy';
import { Menu, MenuRange } from '@grammyjs/menu';
import { BOT_URL, CHANNEL_URL, CHAT_URL, SUPPORT_URL } from '../config.js';
import db from './db-manager.js';
export const accept = new InlineKeyboard()
    .text('‚úÖ–ü—Ä–∏–Ω—è—Ç—å –ø–æ–ª–∏—Ç–∏–∫—É', 'accept');
export const start = new InlineKeyboard()
    .text('–ù–∞—á–∞—Ç—å', 'begin');
export const links = new InlineKeyboard()
    .url('–ß–∞—Ç Galaxy', CHAT_URL)
    .url('–ö–∞–Ω–∞–ª Galaxy', CHANNEL_URL)
    .text('–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è', 'subscribed-check');
/* Template
export const mainMenu = new InlineKeyboard()
    .text('üí∞–°—Ç–æ–ª—ã', 'tabels').row()
    .text('üßø–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å', 'my-profile').row()
    .text('‚ÑπÔ∏è–û –ø—Ä–æ–µ–∫—Ç–µ', 'about')
 */
export const mainMenu = new Keyboard()
    .text('–û—Ç–∫—Ä—ã—Ç—å —Å—Ç–æ–ª').row()
    .text('–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å').row()
    .text('Ô∏è–û –ø—Ä–æ–µ–∫—Ç–µ').row()
    .text('–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞').row();
export const mainMenu0 = new Menu('main-menu')
    .submenu('üí∞–°—Ç–æ–ª—ã', 'tables', ctx => ctx.editMessageText('–ú–æ–∏ —Å—Ç–æ–ª—ã')).row()
    .submenu('üßø–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å', 'my-profile', async (ctx) => {
    const userID = ctx?.from?.id;
    const userData = await db.users.findOne({ userID });
    ctx.editMessageText(`ID: <code>${ctx.from.id}</code>\n` +
        `<b>–ü—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö:</b> ${userData?.referrals?.length}\n` +
        `<b>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:</b> ${BOT_URL}?start=r${userID}`, {
        parse_mode: 'HTML'
    });
}).row()
    .submenu('‚ÑπÔ∏è–û –ø—Ä–æ–µ–∫—Ç–µ', 'about-project', ctx => ctx.editMessageText('–û –ø—Ä–æ–µ–∫—Ç–µ'));
export const tables = new Menu('tables')
    .dynamic(async (ctx) => {
    const userID = ctx?.from?.id;
    const range = new MenuRange();
    try {
        // const userData = await db.users.findOne({ userID: ctx?.from?.id })
        // for (const table in userData?.tables) {
        //     range.text({ text: 'table.title', payload: `table|${table || null}` }).row()
        // }
        const { tables } = await db.users.findOne({ userID });
        console.log('fhjsdgfjhsdgfjsjh', tables);
        for (const table of Object.values(tables)) {
            // @ts-ignore
            console.log('23i4yu2938478924798', table.id);
            // @ts-ignore
            const tableData = await db.tables.findOne({ id: table?.id });
            if (tableData?.title) {
                range.text({
                    text: tableData.title,
                    // @ts-ignore
                    payload: `table|${table?.id}`
                }).row();
            }
        }
    }
    catch (e) {
    }
    return range;
})
    .submenu('–û—Ç–∫—Ä—ã—Ç—å —Å—Ç–æ–ª', 'tables-choice').row();
export const tablesChoice = new Menu('tables-choice')
    .dynamic(async (ctx) => {
    const userID = ctx?.from?.id;
    const range = new MenuRange();
    const userData = await db.users.findOne({ userID });
    if (!userData?.tables?.bronzeTable) {
        range.text({
            text: 'ü•âÔ∏è–ë—Ä–æ–Ω–∑–æ–≤—ã–π —Å—Ç–æ–ª',
            payload: 'confirm_to_open_table|bronze'
        }).row();
    }
    else {
        range.text({
            text: 'üü¢ü•âÔ∏è–ë—Ä–æ–Ω–∑–æ–≤—ã–π —Å—Ç–æ–ª',
            payload: 'done'
        }).row();
    }
    const tableLevel = userData?.tableLevel;
    if (tableLevel >= 1) {
        range.text({
            text: 'ü•àÔ∏è–°–µ—Ä–µ–±—Ä—è–Ω—ã–π —Å—Ç–æ–ª',
            payload: 'confirm_to_open_table|silver'
        }).row();
    }
    else {
        range.text({
            text: 'ü•à–°–µ—Ä–µ–±—Ä—è–Ω—ã–π —Å—Ç–æ–ª',
            payload: 'locked'
        }).row();
    }
    if (tableLevel >= 2) {
        range.text({
            text: 'ü•á–ó–æ–ª–æ—Ç–æ–π —Å—Ç–æ–ª',
            payload: 'confirm_to_open_table|gold'
        }).row();
    }
    else {
        range.text({
            text: 'ü•á–ó–æ–ª–æ—Ç–æ–π —Å—Ç–æ–ª',
            payload: 'locked'
        }).row();
    }
    if (tableLevel >= 3) {
        range.text({
            text: 'üõ°Ô∏è–ü–ª–∞—Ç–∏–Ω–æ–≤—ã–π —Å—Ç–æ–ª',
            payload: 'confirm_to_open_table|platinum'
        }).row();
    }
    else {
        range.text({
            text: 'üõ°Ô∏è–ü–ª–∞—Ç–∏–Ω–æ–≤—ã–π —Å—Ç–æ–ª',
            payload: 'locked'
        }).row();
    }
    if (tableLevel >= 4) {
        range.text({
            text: 'üîπÔ∏è–°–∞–ø—Ñ–∏—Ä–æ–≤—ã–π —Å—Ç–æ–ª',
            payload: 'confirm_to_open_table|sapphire'
        }).row();
    }
    else {
        range.text({
            text: 'üîπÔ∏è–°–∞–ø—Ñ–∏—Ä–æ–≤—ã–π —Å—Ç–æ–ª',
            payload: 'locked'
        }).row();
    }
    if (tableLevel >= 5) {
        range.text({
            text: '‚ô¶Ô∏è–†—É–±–∏–Ω–æ–≤—ã–π —Å—Ç–æ–ª',
            payload: 'confirm_to_open_table|ruby'
        }).row();
    }
    else {
        range.text({
            text: '‚ô¶Ô∏è–†—É–±–∏–Ω–æ–≤—ã–π —Å—Ç–æ–ª',
            payload: 'locked'
        }).row();
    }
    if (tableLevel >= 6) {
        range.text({
            text: '‚ùáÔ∏è–ò–∑—É–º—Ä—É–¥–Ω—ã–π —Å—Ç–æ–ª',
            payload: 'confirm_to_open_table|emerald'
        }).row();
    }
    else {
        range.text({
            text: '‚ùáÔ∏è–ò–∑—É–º—Ä—É–¥–Ω—ã–π —Å—Ç–æ–ª',
            payload: 'locked'
        }).row();
    }
    if (tableLevel >= 7) {
        range.text({
            text: 'üíéÔ∏è–ë—Ä–∏–ª–ª–∏–∞–Ω—Ç–æ–≤—ã–π —Å—Ç–æ–ª',
            payload: 'confirm_to_open_table|diamond'
        }).row();
    }
    else {
        range.text({
            text: 'üíéÔ∏è–ë—Ä–∏–ª–ª–∏–∞–Ω—Ç–æ–≤—ã–π —Å—Ç–æ–ª',
            payload: 'locked'
        }).row();
    }
    return range;
})
    .back('üîô–ù–∞–∑–∞–¥');
tables.register(tablesChoice);
export const aboutProject = new Menu('about-project')
    .url('üÜò–¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞', SUPPORT_URL).row()
    .text('–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è', ctx => ctx.replyWithDocument('https://theses.cz/id/coz94g/35205-772556954.pdf')).row();
const myProfile = new Menu('my-profile')
    .back('–ù–∞–∑–∞–¥', ctx => ctx.editMessageText('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'));
mainMenu0.register([tables, aboutProject, myProfile]);
export const enterCode = new InlineKeyboard()
    .text('–í–≤–µ—Å—Ç–∏ –∫–æ–¥', 'enterCode');
// Make it interactive.
// bot.use(menu);
export const table = new Menu('table')
    .text('–°–¥–µ–ª–∞—Ç—å 3 –ø–æ–¥–∞—Ä–∫–∞', ctx => {
    ctx.editMessageText('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å\n' +
        '–Ω–∞ —Å—Ç–æ–ª ...\n' +
        'id —Å—Ç–æ–ª–∞ ...\n' +
        '\n' +
        '*–º–∞—Å—Ç–µ—Ä\n' +
        '** –º–µ–Ω—Ç–æ—Ä ');
}).row()
    .text('‚ùå–£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç').row()
    .back('–ù–∞–∑–∞–¥');
tables.register(table);
export const tableDone = new Menu('table-done')
    .text({
    text: '–ö–æ–º–∞–Ω–¥–∞ —Å–ø–∏—Å–∫–æ–º',
    payload: 'commands_list'
}, ctx => {
}).row()
    .text({
    text: '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∞—Ä–∏—Ç–µ–ª–µ–π',
    payload: 'show_lister'
}).row()
    .text({ text: '–ù–∞–∑–∞–¥' }, ctx => ctx.editMessageText('–ú–æ–∏ —Å—Ç–æ–ª—ã')).row();
export const makeThreeGifts = new Menu('make-three-gifts')
    .text('–û–ø–æ–≤–µ—Å—Ç–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤', ctx => {
    // notify members
    ctx.reply('‚úÖ–£—á–∞—Å—Ç–Ω–∏–∫–∏ –æ–ø–æ–≤–µ—â–µ–Ω—ã');
})
    .back('–ù–∞–∑–∞–¥');
export const giftBuilder = (usernames, tableID = '', partners = [], gifters = []) => {
    console.log('tableIDWEgot', tableID);
    const keyboard = new InlineKeyboard();
    if (usernames) {
        for (const user of usernames) {
            // @ts-ignore
            if (!user?.name)
                continue;
            keyboard.url(`üéÅ–°–¥–µ–ª–∞—Ç—å –ø–æ–¥–∞—Ä–æ–∫ @${user.name} (${user.amount})`, `t.me/${user.name}`).row();
        }
    }
    let partnerCount = 0;
    let rowFactor = false;
    for (const userID of partners) {
        keyboard.text(`üü¢–ü–∞—Ä—Ç–Ω–µ—Ä-${++partnerCount}`, `show_user|${userID}`);
        if (rowFactor)
            keyboard.row();
        rowFactor = !rowFactor;
    }
    let gifterCount = 0;
    for (const userID of gifters) {
        keyboard.text(`üîµ–î–∞—Ä–∏—Ç–µ–ª—å-${++gifterCount}`, `show_user|${userID}`);
        if (rowFactor)
            keyboard.row();
        rowFactor = !rowFactor;
    }
    if (usernames) {
        keyboard.text('üîî–û–ø–æ–≤–µ—Å—Ç–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤', `notify-members|${tableID}`).row();
    }
    // keyboard.text('')
    keyboard.text('üóÑ–ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–º–∞–Ω–¥—É —Å–ø–∏—Å–∫–æ–º', `show_users_list|${tableID}`).row();
    keyboard.text('üå†–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–æ–ª –∫–∞—Ä—Ç–∏–Ω–∫–æ–π', `render_photo|${tableID}`);
    keyboard.text('üîô–ù–∞–∑–∞–¥', 'back|my-tables');
    return keyboard;
};
export const confirmGift = (data) => {
    const keyboard = new InlineKeyboard();
    keyboard.text('‚úÖ–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', `accept|${data}`);
    keyboard.text('‚ùå–û—Ç–∫–ª–æ–Ω–∏—Ç—å', `decline|${data}`);
    return keyboard;
};
export const deleteAccount = new InlineKeyboard()
    .text('‚ùå–£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç', 'delete_my_account');
export const showUsersList = (tableID) => new InlineKeyboard()
    .text('–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–∫–æ–º', `show_users_list|${tableID}`);
export const inviteUsersForwardLink = (text) => new InlineKeyboard().switchInline('testText', 'testQuery');
export const confirmationWithAction = (data) => new InlineKeyboard();
export const writeAndHide = (username) => new InlineKeyboard()
    .url('‚úàÔ∏è–ù–∞–ø–∏—Å–∞—Ç—å', `t.me/${username}`).row()
    .text('‚ùå–°–∫—Ä—ã—Ç—å', 'hide');
export const openTableOrHide = (tableTitle) => new InlineKeyboard()
    .text('üîì–û—Ç–∫—Ä—ã—Ç—å —Å—Ç–æ–ª', `open_table|${tableTitle}`)
    .text('‚ùå–û—Ç–º–µ–Ω–∞', 'hide');
export const profileButton = new InlineKeyboard()
    .text('üèÜ–ú–æ—è –ø–µ—Ä–≤–∞—è –ª–∏–Ω–∏—è', 'my_first_line');
// YEhpR
export const createSpecialReferralLink = new InlineKeyboard()
    .text('–°–æ–∑–¥–∞—Ç—å —Ä–µ—Ñ. —Å—Å—ã–ª–∫—É', 'create-special-ref-link');
//# sourceMappingURL=data:application/json;base64,