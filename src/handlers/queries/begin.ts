import db, { setUserStep } from '../../db-manager.js'
import * as keyboards from '../../keyboards.js'
import { addAbortSignal } from 'stream'

export default async (ctx: any) => {
    const userData = await db.users.findOne({ userID: ctx.from.id })
    if (!userData?.referrerID) {
        return ctx.editMessageText('–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥  –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ –∏–ª–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ', { reply_markup: keyboards.enterCode })
    }
    const referrerData = await db.users.findOne({ userID: userData?.referrerID })
    await ctx.editMessageText(`–í–∞—à ID: <code>${ctx.from.id}</code>
<b>–í–∞—à –Ω–∏–∫:</b> @${userData.username}

<b>–í–∞—Å –ø—Ä–∏–≥–ª–∞—Å–∏–ª:</b>  @${referrerData?.username}
<b>–õ–∏—á–Ω–æ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö:</b> 0
<b>–í–∞—à–∏ —Å—Ç–æ–ª—ã:</b>

ü•â–ë—Ä–æ–Ω–∑–æ–≤—ã–π —Å—Ç–æ–ª –µ—â—ë –Ω–µ –≤—ã–±—Ä–∞–Ω

<b>–î–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞, –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –ß–∞—Ç –∏ –ö–∞–Ω–∞–ªüëá</b>`, { reply_markup: keyboards.links, parse_mode: 'HTML' }
    )
    await setUserStep(ctx.from.id, 'subscribe-locker')
    //     await ctx.editMessageText('<b>–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å\n</b>' +
    //         `ID: <code>${ctx.from.id}</code>
    // –í–∞—Å –ø—Ä–∏–≥–ª–∞—Å–∏–ª: ${userData.referrerID}\n
    // –ü—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã–µ: ${userData?.referrals?.length || 0}
    // –°—Ç–æ–ª –µ—â—ë –Ω–µ –≤—ã–±—Ä–∞–Ω, —É –≤–∞—Å –µ—Å—Ç—å 24 —á–∞—Å–∞....`, {
    //         reply_markup: keyboards.links, parse_mode: 'HTML'
    //     })

    setTimeout(() => {
        ctx.reply('<b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>', {
            reply_markup: {
                resize_keyboard: true,
                keyboard: keyboards.mainMenu.build()
            },
            parse_mode: 'HTML'
        })
    }, 2000)
}
