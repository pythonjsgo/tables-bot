import { NextFunction } from 'grammy'
import { BOT_URL } from '../../../config.js'
import db from '../../db-manager.js'
import { deleteAccount, profileButton } from '../../keyboards.js'
import { get3GDowners, getBronzeDonwers } from '../../logic.js'

export default async (ctx: any, next: NextFunction) => {
    const userID = ctx?.from?.id
    const userData = await db.users.findOne({ userID })
    //  `<b>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:</b> ${BOT_URL}?start=r${userID}
    const referrerUsername = (await db.users.findOne({ userID: userData?.referrerID }))?.username
    let replyText = `<b>–í–∞—à ID:</b> <code>${userID}</code> 
<b>–í–∞—à –Ω–∏–∫:</b> @${userData?.username}

<b>–í–∞—Å –ø—Ä–∏–≥–ª–∞—Å–∏–ª:</b> @${referrerUsername}
<b>–õ–∏—á–Ω–æ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö:</b> ${userData?.referrals?.length | 0}
<b>–í–∞—à–∏ —Å—Ç–æ–ª—ã:</b>\n`

    let index = 0
    if (userData?.tables) {
        for (const table of Object.values(userData.tables)) {
            // @ts-ignore-start
            replyText += `\n\n<b>${table.title}</b>\n`

            // @ts-ignore
            replyText += `üü¢–í—Å–µ–≥–æ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –Ω–∞ —Å—Ç–æ–ª–µ: ${table?.downers?.length | 0}`
            if (index === 0) {
                // @ts-ignore
                const {
                    layerOne,
                    layerTwo
                    // @ts-ignore
                } = await getBronzeDonwers(table.id)
                replyText += `\nüîµ–í—Å–µ–≥–æ –¥–∞—Ä–∏—Ç–µ–ª–µ–π –Ω–∞ —Å—Ç–æ–ª–µ: ${layerTwo?.length | 0}`
            }
            // @ts-ignore
            index++
            // @ts-ignore-end
        }
    } else {
        replyText += '\n<b>–°—Ç–æ–ª—ã –Ω–µ –æ—Ç–∫—Ä—ã—Ç—ã</b>'
    }

    ctx.reply(replyText, {
        reply_markup: profileButton,
        parse_mode: 'HTML'
    })
}
